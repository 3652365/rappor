// Based on http://graphviz.org/content/cluster

// Node types:
//   Rectangle: process
//   Oval: data
//   Diamond: debug/simulation data

digraph G {
  colorscheme=pastel13

  subgraph cluster_0 {
    label = "Client";
    style=filled;
    color=2;

    node [style=filled, color=white];

    gen_sim_input -> dist_csv -> rappor_sim;
    
    rappor_sim -> out;
    rappor_sim -> params;
    rappor_sim -> hist;
    rappor_sim -> true_inputs;

    dist_csv [shape=Mbox, label="dist.csv"];
    rappor_sim [label="rappor_sim"];
    out [shape=Mbox, label="dist_out.csv"];
    params [shape=Mbox, label="dist_params.csv"];

    // simulation data
    hist [shape=Mdiamond, label="dist_hist.csv"];
    true_inputs [shape=Mdiamond, label="dist_true_inputs.txt"];
  }

  subgraph cluster_1 {
    label = "Server";
    style = filled;
    color=3;

    node [style=filled, color=white];

    sum_bits -> counts;

    // sum_bits needs the params to construct the matrix.  Technically it could
    // infer it, but this is simple.
    params -> sum_bits;

    true_inputs -> demo_sh -> candidates -> hash_candidates -> map;
    params -> hash_candidates;

    params -> analyze;
    map -> analyze;
    counts -> analyze;
    hist -> analyze;

    analyze -> plot_png;

    analyze [label="analyze.R"];

    counts [shape=Mbox, label="dist_count.csv"];
    candidates [shape=Mbox, label="dist_candidates.txt"];
    map [shape=Mbox, label="dist_map.csv"];

    plot_png [shape=Mbox, label="dist.png"];

  }

  out -> sum_bits;
}
